This is gem5 modified to for approximate computing.

Bunker Cache has been implemented. The src for Bunker Cache is in src/learning_gem5/part2. This is a working bunker cache implementation 
but doesn't support programmable radix / stride. 

to change the STRIDE / RADIX, open bunker_cache.cc and search for STRIDE. 

Usage:

clone the git repo.

run scons build/x86/gem5.opt

 config/learning_gem5/part2/original_cache.py 

is the configuration script with same old trivial L1 cache. You can change / play around
with system configurations. In process.cmd, change the executable to whatever you want.

 config/learning_gem5/part2/bunker_cache.py 

is the configuration script with same as above L1 cache but includes the bunker approximation. run the same binary as above,
you can compare the results in m5out directorys. Bunker Cache misses should be less than L1 cache above (for same configuration / size)


Bunker L2 cache is still in progress. Kmeans is just too heave for my physical / virtual machine. I can't get the physical address of the
data blocks on which I need to apply bunker approximation.

I will run gem5 on my work machine with 128 GB of RAM and 48 core Xenon machine. But for that, I have to copy my VM to that machine. These 
days I am doing that. 
